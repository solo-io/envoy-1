date: April 4, 2024

bug_fixes:
- area: http2
  change: |
    Update nghttp2 to resolve CVE-2024-30255 (https://github.com/envoyproxy/envoy/security/advisories/GHSA-j654-3ccm-vfmm).

new_features:
- area: google_grpc
  change: |
    Added an off-by-default runtime flag
    ``envoy.reloadable_features.google_grpc_disable_tls_13`` to disable TLSv1.3
    usage by gRPC SDK for ``google_grpc`` services.

    fixed a bug where handshake may fail when both private key provider and cert validation are set.
- area: buffer
  change: |
    Fixed a bug (https://github.com/envoyproxy/envoy/issues/28760) that the internal listener causes an undefined
    behavior due to the unintended release of the buffer memory.
- area: http
  change: |
    Fixed recursion when HTTP connection is disconnected due to a high number of premature resets.
- area: proxy protocol
  change: |
    fixed a crash when Envoy is configured for PROXY protocol on both a listener and cluster, and the listener receives
    a PROXY protocol header with address type LOCAL (typically used for health checks).
- area: proxy_protocol
  change: |
    Fix crash due to uncaught exception when the operating system does not support an address type (such as IPv6) that is
    received in a proxy protocol header. Connections will instead be dropped/reset.
- area: proxy_protocol
  change: |
    Fixed a bug where TLVs with non utf8 characters were inserted as protobuf values into filter metadata circumventing
    ext_authz checks when ``failure_mode_allow`` is set to ``true``.
- area: http
  change: |
    Fixed crash when HTTP request idle and per try timeouts occurs within backoff interval.
- area: url matching
  change: |
    Fixed excessive CPU utilization when using regex URL template matcher.
- area: async http client
  change: |
    Added one option to disable the response body buffering for mirror request. Also introduced a 32MB cap for the response
    buffer, which can be changed by the runtime flag ``http.async_response_buffer_limit`` based on the product needs.

removed_config_or_runtime:
# *Normally occurs at the end of the* :ref:`deprecation period <deprecated>`

new_features:
- area: tap
  change: |
    added :ref:`custom_sink <envoy_v3_api_field_config.tap.v3.OutputSink.custom_sink>` type to enable writing tap data
    out to a custom sink extension.

deprecated:
